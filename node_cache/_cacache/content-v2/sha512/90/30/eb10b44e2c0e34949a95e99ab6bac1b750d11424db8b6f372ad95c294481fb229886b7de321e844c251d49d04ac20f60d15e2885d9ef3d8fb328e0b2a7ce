{"_id":"mdbox","_rev":"3843077-65d46b67812a8754438c0274","dist-tags":{"latest":"0.1.0"},"name":"mdbox","time":{"created":"2024-02-20T09:05:43.011Z","modified":"2024-02-24T12:17:04.171Z","0.0.0":"2024-02-20T09:01:58.047Z","0.1.0":"2024-02-24T12:15:56.172Z"},"versions":{"0.0.0":{"name":"mdbox","version":"0.0.0","_id":"mdbox@0.0.0","_nodeVersion":"20.11.0","_npmVersion":"10.2.4","dist":{"integrity":"sha512-4QKPAdNuyR+yntgwi959Od/UC6EzRDdQmStgcSO13IYKdp6rIj82nPY0wPt1xOv4v+dYJ7lC7NlalO9QIRzMsg==","shasum":"d6c6bcefad9f58b2dd9e6b12a9026f4a0631ec05","tarball":"https://registry.npmmirror.com/mdbox/-/mdbox-0.0.0.tgz","fileCount":1,"unpackedSize":34,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD1yPNOF5m/RPO1TuzOMTYHwKLq5tOqZ9SLrvRB6Sd31AIhAJfyGamQ41Id64lyzW1eOPCB+OroHZ4zYWl5AZPRBmIP"}],"size":135},"_npmUser":{"name":"pi0","email":"pyapar@gmail.com"},"directories":{},"maintainers":[{"name":"pi0","email":"pyapar@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/mdbox_0.0.0_1708419717912_0.38127900415474825"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-02-20T09:01:58.047Z","publish_time":1708419718047,"_source_registry_name":"default"},"0.1.0":{"name":"mdbox","version":"0.1.0","description":"Just simple markdown utils!","repository":{"type":"git","url":"git+https://github.com/unjs/mdbox.git"},"license":"MIT","sideEffects":false,"type":"module","exports":{"./lib/*":"./lib/*.mjs",".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","require":"./dist/index.cjs"},"./parser":{"types":"./dist/parser.d.ts","import":"./dist/parser.mjs","require":"./dist/parser.cjs"}},"main":"./dist/index.cjs","module":"./dist/index.mjs","types":"./dist/index.d.ts","scripts":{"bench:bun":"bun --bun ./test/parse.bench.ts","bench:deno":"deno bench -A --unstable-sloppy-imports test/parse.bench.ts","bench:node":"vitest bench","build":"automd && unbuild","dev":"vitest dev -u","lint":"eslint --cache --ext .ts,.js,.mjs,.cjs . && prettier -c src test","lint:fix":"eslint --cache --ext .ts,.js,.mjs,.cjs . --fix && prettier -c src test -w","prepack":"pnpm build","play":"jiti playground","release":"pnpm test && changelogen --release && npm publish && git push --follow-tags","test":"pnpm lint && pnpm test:types && vitest run --coverage","test:types":"tsc --noEmit --skipLibCheck"},"dependencies":{"md4w":"^0.2.2"},"devDependencies":{"@types/markdown-it":"^13.0.7","@types/mdast":"^4.0.3","@types/node":"^20.11.20","@vitest/coverage-v8":"^1.3.1","automd":"^0.3.5","changelogen":"^0.5.5","esbuild":"^0.20.1","eslint":"^8.57.0","eslint-config-unjs":"^0.2.1","jiti":"^1.21.0","markdown-it":"^14.0.0","mdast-util-from-markdown":"^2.0.0","mdast-util-gfm":"^3.0.0","micromark-extension-gfm":"^3.0.0","mitata":"^0.1.11","ohash":"^1.1.3","prettier":"^3.2.5","punycode.js":"^2.3.1","typescript":"^5.3.3","unbuild":"^2.0.0","vite-tsconfig-paths":"^4.3.1","vitest":"^1.3.1"},"_id":"mdbox@0.1.0","gitHead":"c56c89b0d866e492ece83bf432db1ae8e2634f76","bugs":{"url":"https://github.com/unjs/mdbox/issues"},"homepage":"https://github.com/unjs/mdbox#readme","_nodeVersion":"20.11.1","_npmVersion":"10.2.4","dist":{"integrity":"sha512-eQA+6vf5XM4LqdfLsfPMxqUBSU8AMzSCSFbojWLXSDL2jZeO+xgHhxTggrG2jfGPAyyIWIukj6SuoFBd9a7XZw==","shasum":"31026621a77319972d321124b69669daf307fd6d","tarball":"https://registry.npmmirror.com/mdbox/-/mdbox-0.1.0.tgz","fileCount":16,"unpackedSize":316182,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIHiMpATH81jqqVfjqDe1wWL/hzsMC9FwB72xqw8SUYDGAiEAiA6hJVxyRZOfyLhX0OsiVyeC/eX/gXI5/8f1lfqG0sc="}],"size":99264},"_npmUser":{"name":"pi0","email":"pyapar@gmail.com"},"directories":{},"maintainers":[{"name":"pi0","email":"pyapar@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/mdbox_0.1.0_1708776955987_0.30598292245190395"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-02-24T12:15:56.172Z","publish_time":1708776956172,"_source_registry_name":"default"}},"description":"Just simple markdown utils!","maintainers":[{"name":"pi0","email":"pyapar@gmail.com"}],"readme":"# â¬‡ mdbox\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n\n<!-- [![bundle][bundle-src]][bundle-href] -->\n<!-- [![Codecov][codecov-src]][codecov-href] -->\n\nJust simple markdown utils!\n\n> [!IMPORTANT]\n> This project is under development.\n\n## ðŸ’¡ Why?\n\n> Markdown is intended to be as easy-to-read and easy-to-write as is. Readability is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text [^1]. Any sequence of characters is a valid Markdown document [^2].\n\nWhile Markdown is designed to be simple, I often find myself in situations where there is simply no tool to allow programmatically working with Markdown syntax without dealing with complex and strict AST objects and choosing between dozens of available tools and extensions. Often, not even worth pursuing ideas around Markdown.\n\nThe idea is to make good-enough tools to read and write Markdown programmatically, as easy as Markdown itself is, without dealing with an AST.\n\n## Usage\n\nInstall package:\n\n```sh\n# npm\nnpm install mdbox\n\n# yarn\nyarn add mdbox\n\n# pnpm\npnpm install mdbox\n\n# bun\nbun install mdbox\n```\n\nImport:\n\n```js\n// ESM\nimport { md } from \"mdbox\";\n\n// CommonJS\nconst { md } = require(\"mdbox\");\n```\n\n<!-- automd:jsdocs src=\"./src/index\" group=\"render_utils\" -->\n\n## Render Utils\n\n### `blockquote(text)`\n\nRender a markdown blockquote text with > in front of a paragraph\n\n**Example:**\n\n```js\nmd.blockquote(\"Hello, World!\");\n// => \"> Hello, World!\"\n```\n\n### `bold(text)`\n\nRender a markdown bold text.\n\n**Example:**\n\n```js\nmd.bold(\"Hello, World!\");\n// => \"**Hello, World!**\"\n```\n\n### `boldAndItalic(text)`\n\nRender a markdown bold and italic text.\n\n**Example:**\n\n```js\nmd.boldAndItalic(\"Hello, World!\");\n// => \"***Hello, World!***\"\n```\n\n### `codeBlock(code, lang?, opts?: { ext? })`\n\nFormat a string as a code block.\n\n**Example:**\n\n```js\nmd.codeBlock('console.log(\"Hello, World!\");', \"js\");\n// => \"```js\\nconsole.log(\"Hello, World!\");\\n```\"\n```\n\n### `heading(text, level)`\n\nRender a markdown heading.\n\n**Example:**\n\n```js\nmd.heading(\"Hello, World!\", 1);\n// => \"\\n# Hello, World!\\n\"\n```\n\n### `hr(length)`\n\nRender a markdown horizontal rule.\n\n**Example:**\n\n```js\nmd.hr();\n// => \"---\"\n```\n\n### `image(url, text?, opts?: { title? })`\n\nRender a markdown image.\n\n**Example:**\n\n```js\nmd.image(\"https://cataas.com/cat\", \"Cute Cat\");\n// => \"![Cute Cat](https://cataas.com/cat)\"\n```\n\n### `italic(text)`\n\nRender a markdown italic text.\n\n**Example:**\n\n```js\nmd.italic(\"Hello, World!\");\n// => \"_Hello, World!_\"\n```\n\n### `link(url, text?, opts?: { title?, external? })`\n\nRender a markdown link.\n\n**Example:**\n\n```js\nmd.link(\"https://www.google.com\", \"Google\");\n// => \"[Google](https://www.google.com)\"\n```\n```js\nmd.link(\"https://www.google.com\", \"Google\", { external: true });\n// => \"<a href=\"https://www.google.com\" title=\"Google\" target=\"_blank\">Google</a>\"\n```\n\n### `list(items, opts: { ordered?, char? })`\n\nRender a markdown ordered or unordered list.\n\n**Example:**\n\n```js\nmd.list([\"Item 1\", \"Item 2\", \"Item 3\"]);\n// => \"- Item 1\\n- Item 2\\n- Item 3\"\n```\n```js\nmd.list([\"Item 1\", \"Item 2\", \"Item 3\"], { ordered: true });\n// => \"1. Item 1\\n2. Item 2\\n3. Item 3\"\n```\n\n### `strikethrough(text)`\n\nRender a markdown strikethrough text.\n\n**Example:**\n\n```js\nmd.strikethrough(\"Hello, World!\");\n// => \"~~Hello, World!~~\"\n```\n\n### `table(table: { rows[][], columns[] })`\n\nRender a markdown table.\n\n**Example:**\n\n```js\nmd.table({\n columns: [\"Breed\", \"Origin\", \"Size\", \"Temperament\"],\n rows: [\n   [\"Abyssinian\", \"Egypt\", \"Medium\", \"Active\"],\n   [\"Aegean\", \"Greece\", \"Medium\", \"Active\"],\n   [\"American Bobtail\", \"United States\", \"Medium\", \"Active\"],\n   [\"Applehead Siamese\", \"Thailand\", \"Medium\", \"Active\"],\n  ],\n});\n```\n\n<!-- /automd -->\n\n<!-- automd:jsdocs src=\"./src/parser/index\" group=\"parsing_utils\" -->\n\n## Parsing Utils\n\n### `initMarkdownItParser(options)`\n\nCreate parser with [markdown-it](https://github.com/markdown-it/markdown-it).\n**WARNING**: The returned tree structure is unstable.\n\n**Example:**\n\n```ts\nimport { initMarkdownItParser } from \"mdbox/parser\";\nconst parser = await initMarkdownItParser();\nconst { tree } = parser.parse(\"# Hello, *world*!\");\n```\n\n### `initMd4wParser(opts)`\n\nCreate parser with [md4w](https://github.com/ije/md4w).\n**WARNING**: The returned tree structure is unstable.\n\n**Example:**\n\n```ts\nimport { initMd4wParser } from \"mdbox/parser\";\nconst parser = await initMd4wParser();\nconst { tree } = parser.parse(\"# Hello, *world*!\");\n```\n\n### `initMdAstParser(opts)`\n\nCreate parser with [mdast-util-from-markdown](https://github.com/syntax-tree/mdast-util-from-markdown).\n**WARNING**: The returned tree structure is unstable.\n\n**Example:**\n\n```ts\nimport { initMdAstParser } from \"mdbox/parser\";\nconst parser = await initMdAstParser();\nconst { tree } = parser.parse(\"# Hello, *world*!\");\n```\n\n<!-- /automd -->\n\n<!-- automd:fetch url=\"gh:unjs/.github/main/snippets/readme-contrib-node-pnpm.md\" -->\n\n## Contribution\n\n<details>\n  <summary>Local development</summary>\n\n- Clone this repository\n- Install the latest LTS version of [Node.js](https://nodejs.org/en/)\n- Enable [Corepack](https://github.com/nodejs/corepack) using `corepack enable`\n- Install dependencies using `pnpm install`\n- Run tests using `pnpm dev` or `pnpm test`\n\n</details>\n\n<!-- /automd -->\n\n## License\n\n<!-- automd:contributors license=MIT author=pi0 -->\n\nPublished under the [MIT](https://github.com/unjs/mdbox/blob/main/LICENSE) license.\nMade by [@pi0](https://github.com/pi0) and [community](https://github.com/unjs/mdbox/graphs/contributors) ðŸ’›\n<br><br>\n<a href=\"https://github.com/unjs/mdbox/graphs/contributors\">\n<img src=\"https://contrib.rocks/image?repo=unjs/mdbox\" />\n</a>\n\n<!-- /automd -->\n\n<!-- automd:with-automd -->\n\n---\n\n_ðŸ¤– auto updated with [automd](https://automd.unjs.io)_\n\n<!-- /automd -->\n","_source_registry_name":"default","bugs":{"url":"https://github.com/unjs/mdbox/issues"},"homepage":"https://github.com/unjs/mdbox#readme","license":"MIT","repository":{"type":"git","url":"git+https://github.com/unjs/mdbox.git"}}