{"_attachments":{},"_id":"browserstack","_rev":"6620-61f159e3b77ea98a74937d09","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"description":"A client for working with the BrowserStack APIs.","dist-tags":{"latest":"1.6.1"},"license":"MIT","maintainers":[{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"name":"browserstack","readme":"# node-browserstack\n\nA node.js JavaScript client for working with [BrowserStack](http://browserstack.com) through its [REST API](https://github.com/browserstack/api) (*aka* Javascript Testing API), [Automate API](https://www.browserstack.com/automate/rest-api), [App Automate API](https://www.browserstack.com/app-automate/rest-api), and [Screenshots API](https://www.browserstack.com/screenshots/api).\n\n## Installation\n\n```\nnpm install browserstack\n```\n\n## Usage\n\n```javascript\nvar BrowserStack = require(\"browserstack\");\nvar browserStackCredentials = {\n\tusername: \"foo\",\n\tpassword: \"p455w0rd!!1\"\n};\n\n// REST API\nvar client = BrowserStack.createClient(browserStackCredentials);\n\nclient.getBrowsers(function(error, browsers) {\n\tconsole.log(\"The following browsers are available for testing\");\n\tconsole.log(browsers);\n});\n\n// Automate API\nvar automateClient = BrowserStack.createAutomateClient(browserStackCredentials);\n\nautomateClient.getBrowsers(function(error, browsers) {\n\tconsole.log(\"The following browsers are available for automated testing\");\n\tconsole.log(browsers);\n});\n\n// App Automate API\n// Show the upload builds for mobile app automation\nvar appAutomateClient = BrowserStack.createAppAutomateClient(browserStackCredentials);\n\nappAutomateClient.getBuilds(function(error, builds) {\n\tconsole.log(\"The following builds are available for app automated testing\");\n\tconsole.log(builds);\n});\n\n// Screenshots API\nvar screenshotClient = BrowserStack.createScreenshotClient(browserStackCredentials);\n\nscreenshotClient.getBrowsers(function(error, browsers) {\n\tconsole.log(\"The following browsers are available for screenshots\");\n\tconsole.log(browsers);\n});\n```\n\n## API\n\n### Objects\n\n#### browser objects\n\nA common pattern in the APIs is a \"browser object\" which is just a plain object with the following properties:\n\n* `os`: The operating system.\n* `os_version`: The operating system version.\n* `browser`: The browser name.\n* `browser_version`: The browser version.\n* `device`: The device name.\n\nA browser object may only have one of `browser` or `device` set; which property is set will depend on `os`.\n\n#### worker objects\n\nWorker objects are extended [browser objects](#browser-objects) which contain the following additional properties:\n\n* `id`: The worker id.\n* `status`: A string representing the current status of the worker.\n\t* Possible statuses: `\"running\"`, `\"queue\"`.\n\n#### project objects\n\nProject objects are plain objects which contain the following properties:\n\n* `id`: The id of the project.\n* `name`: The name of the project.\n* `created_at`: When the project was created.\n* `updated_at`: When the project was most recently updated.\n* `user_id`\n* `group_id`\n\n#### build objects\n\nBuild objects are plain objects which contain the following properties:\n\n* `hashed_id`: The hashed if of the build.\n* `name`: The name of the build.\n* `status`: The status of the build.\n* `duration`\n\n#### extended build objects\n\nExtended build objects are [build objects](#build-objects) with the following additional properties:\n\n* `id`: The id of the build.\n* `automation_project_id`: The id of the project this build belongs to.\n* `updated_at`: When the build was created.\n* `created_at`: When the build was most recently updated.\n* `delta`\n* `tags`\n* `user_id`\n* `group_id`\n\n#### session objects\n\nSession objects are extended [browser objects](#browser-objects) which contain the following additional properties:\n\n* `hashed_id`: The hashed ID of the session.\n* `name`: The name of the session.\n* `build_name`: The name of the build this session belongs to.\n* `project_name`: The name of the project this session belongs to.\n* `status`: The status of the session.\n* `browser_url`: The most recenly loaded URL the worker.\n* `duration`: The duration in seconds that the session has been active.\n* `logs`: The URL for the session logs.\n* `video_url`: The URL for the session video.\n* `reason`: The reason the session was terminated.\n\n#### screenshot job objects\n\nScreenshot job objects are plain objects which contain the following properties:\n\n* `job_id`: The id of the job.\n* `state`: The state of the job.\n* `win_res`: The screen resolution for browsers running on Windows. May be one of: `\"1024x768\"`, `\"1280x1024\"`.\n* `mac_res`: The screen resolution for browsers running on Mac OS X. May be one of: `\"1024x768\"`, `\"1280x960\"`, `\"1280x1024\"`, `\"1600x1200\"`, `\"1920x1080\"`.\n* `orientation`: The screen orientation for devices. May be one of: `\"portrait\"`, `\"landscape\"`.\n* `quality`: The quality of the screenshot. May be one of: `\"original\"`, `\"compressed\"`.\n* `wait_time`: The number of seconds to wait before taking the screenshot. May be one of: `2`, `5`, `10`, `15`, `20`, `60`.\n* `local`: Boolean indicating whether a local testing connection should be used.\n* `browsers`: A collection of [browser objects](#browser-objects) indicating which browsers and devices to take screenshots with.\n\n### screenshot state objects\n\nScreenshot state objects are extended [browser objects](#browser-objects) which contain the following additional properties:\n\n* `id`: The id of the screenshot object.\n* `state`: The state of the screenshot.\n* `url`: The URL of the page the screenshot was generated from.\n* `thumb_url`: The URL for the screenshot thumbnail.\n* `image_url`: The URL for the full-size screenshot.\n* `created_at`: The timestamp indicating when the screenshot was generated.\n\n### REST API v4\n\n*Note: For earlier versions of the API, please see [the wiki](https://github.com/scottgonzalez/node-browserstack/wiki/API).*\n\n#### BrowserStack.createClient(settings)\n\nCreates a new client instance.\n\n* `settings`: A hash of settings that apply to all requests for the new client.\n\t* `username`: The username for the BrowserStack account.\n\t* `password`: The password for the BrowserStack account.\n\t* `version` (optional; default: `4`): Which version of the BrowserStack API to use.\n\t* `server` (optional; default: `{ host: \"api.browserstack.com\", port: 80 }`): An object containing `host` and `port` to connect to a different BrowserStack API compatible service.\n\t* `proxy` (optional; default: `null`): Proxy server supporting HTTPS to be used for connecting to BrowserStack (or `settings.server`). e.g. `\"http://proxy.example.com:1234\"`\n\n#### client.getBrowsers(callback)\n\nGets the list of available browsers.\n\n* `callback` (`function(error, browsers)`): A callback to invoke when the API call is complete.\n\t* `browsers`: An array of [browser objects](#browser-objects).\n\n#### client.createWorker(settings, callback)\n\nCreates a worker.\n\n* `settings`: A hash of settings for the worker (an extended [browser object](#browser-objects)).\n\t* `os`: See [browser object](#browser-objects) for details.\n\t* `os_version`: See [browser object](#browser-objects) for details.\n\t* `browser`: See [browser object](#browser-objects) for details.\n\t* `browser_version`: See [browser object](#browser-objects) for details.\n\t* `device`: See [browser object](#browser-objects) for details.\n\t* `url` (optional): Which URL to navigate to upon creation.\n\t* `timeout` (optional): Maximum life of the worker (in seconds). Maximum value of `1800`. Specifying `0` will use the default of `300`.\n\t* `name` (optional): Provide a name for the worker.\n\t* `build` (optional): Group workers into a build.\n\t* `project` (optional): Provide the project the worker belongs to.\n\t* `browserstack.video` (optional): Set to `false` to disable video recording.\n* `callback` (`function(error, worker)`): A callback to invoke when the API call is complete.\n\t* `worker` A [worker object](#worker-objects).\n\n*Note: A special value of `\"latest\"` is supported for `browser_version`, which will use the latest stable version.*\n\n#### client.getWorker(id, callback)\n\nGets the status of a worker.\n\n* `id`: The id of the worker.\n* `callback` (`function(error, worker)`): A callback to invoke when the API call is complete.\n\t* `worker`: A [worker object](#worker-objects).\n\n#### client.changeUrl(id, options, callback)\n\nChange the URL of a worker.\n\n* `id`: The id of the worker.\n* `options`: Configuration for the URL change.\n\t* `url`: The new URL to set.\n\t* `timeout` (optional): Set a new timeout for this worker, see [createWorker](#client.CreateWorker) for details.\n* `callback` (`function(error, data)`): A callback to invoke when the API call is complete.\n\t* `data`: An object with a `message`, confirming the URL change.\n\n#### client.terminateWorker(id, callback)\n\nTerminates an active worker.\n\n* `id`: The id of the worker to terminate.\n* `callback` (`function(error, data)`): A callback to invoke when the API call is complete.\n\t* `data`: An object with a `time` property indicating how long the worker was alive.\n\n#### client.getWorkers(callback)\n\nGets the status of all workers.\n\n* `callback` (`function(error, workers)`): A callback to invoke when the API call is complete.\n\t* `workers`: An array of [worker objects](#worker-objects).\n\n#### client.takeScreenshot(id, callback)\n\nTake a screenshot at current state of worker.\n\n* `callback` (`function(error, data)`): A callback to invoke when the API call is complete.\n\t* `data`: An object with a `url` property having the public url for the screenshot.\n\n#### client.getLatest(browser, callback)\n\nGets the latest version of a browser.\n\n* `browser`: Which browser to get the latest version for. See [browser object](#browser-objects) for details.\n* `callback` (`function(error, version)`): A callback to invoke when the version is determined.\n\t* `version`: The latest version of the browser.\n\n*Note: Since mobile devices do not have version numbers, there is no latest version.*\n\n#### client.getLatest(callback)\n\nGets the latest version of all browsers.\n\n* `callback` (`function(error, versions)`): A callback to invoke when the versions are determined.\n\t* `versions`: A hash of browser names and versions.\n\n#### client.getApiStatus(callback)\n\n* `callback` (`function(error, status)`): A callback to invoke when the status is determined.\n\t* `used_time`: Time used so far this month, in seconds.\n\t* `total_available_time`: Total available time, in seconds. Paid plans have unlimited API time and will receive the string `\"Unlimited Testing Time\"` instead of a number.\n\t* `running_sessions`: Number of running sessions.\n\t* `sessions_limit`: Number of allowable concurrent sessions.\n\n### Automate API\n\n#### BrowserStack.createAutomateClient(settings)\n\nCreates a new client instance.\n\n* `settings`: A hash of settings that apply to all requests for the new client.\n\t* `username`: The username for the BrowserStack account.\n\t* `password`: The password for the BrowserStack account.\n\t* `proxy` (optional; default: `null`): Proxy server supporting HTTPS to be used for connecting to BrowserStack. e.g. `\"http://proxy.example.com:1234\"`\n\n#### automateClient.getPlan(callback)\n\nGets information about your group's Automate plan, including the maximum number of parallel sessions allowed and the number of parallel sessions currently running.\n\n* `callback` (`function(error, plan)`): A callback to invoke when the API call is complete.\n\t* `plan`: An object with `parallel_sessions_max_allowed`, `parallel_sessions_running`, and `automate_plan` showing the current state of your plan.\n\n#### automateClient.getBrowsers(callback)\n\nGets the list of available browsers.\n\n* `callback` (`function(error, browsers)`): A callback to invoke when the API call is complete.\n\t* `browsers`: An array of [browser objects](#browser-objects).\n\n#### automateClient.getProjects(callback)\n\nGets the list of projects.\n\n* `callback` (`function(error, projects)`): A callback to invoke when the API call is complete.\n\t* `projects`: An array of [project objects](#project-objects).\n\n#### automateClient.getProject(id, callback)\n\nGets information about a project.\n\n* `id`: The ID of the project.\n* `callback` (`function(error, project)`): A callback to invoke when the API call is complete.\n\t* `project`: A [project object](#project-objects) including an array of [extended build objects](#build-objects).\n\n#### automateClient.getBuilds([options,] callback)\n\nGets the list of builds.\n\n* `options` (optional): An object containing search parameters.\n\t* `limit`: The number of builds to return. Defaults to `10`.\n\t* `status`: Filter builds based on status. May be one of `\"running\"`, `\"done\"`, `\"failed\"`, `\"timeout\"`.\n* `callback` (`function(error, builds)`): A callback to invoke when the API call is complete.\n\t* `builds`: An array of [build objects](#build-objects).\n\n#### automateClient.getSessions(buildId, [options,] callback)\n\nGets the list of sessions in a build.\n\n* `buildId`: The hashed ID of the build.\n* `options` (optional): An object containing search parameters.\n\t* `limit`: The number of sessions to return. Defaults to `10`.\n\t* `status`: Filter sessions based on status. May be one of `\"running\"`, `\"done\"`, `\"failed\"`.\n* `callback` (`function(error, sessions)`): A callback to invoke when the API call is complete.\n\t* `sessions`: An array of [session objects](#session-objects).\n\n#### automateClient.getSession(id, callback)\n\nGets the details for a session.\n\n* `id`: The hashed ID of the session.\n* `callback` (`function(error, session)`): A callback to invoke when the API call is complete.\n\t* `session`: A [session object](#session-objects).\n\n#### automateClient.updateSession(id, options, callback)\n\nUpdates the status of a session.\n\n* `id`: The hashed ID of the session.\n* `options`: An object containing the parameters.\n\t* `status`: New status value. [May be one of](https://www.browserstack.com/automate/rest-api#rest-api-sessions) `\"completed\"` or `\"error\"`.\n* `callback` (`function(error, session)`): A callback to invoke when the API call is complete.\n\t* `session`: The updated [session object](#session-objects).\n\n#### automateClient.deleteSession(id, callback)\n\nDeletes a session.\n\n* `id`: The hashed ID of the session.\n* `callback` (`function(error, data)`): A callback to invoke when the API call is complete.\n\t* `data`: An object with a `message`, confirming the deletion.\n\n### App Automate API\n\n#### BrowserStack.createAppAutomateClient(settings)\n\nCreates a new client instance.\n\n* `settings`: A hash of settings that apply to all requests for the new client.\n\t* `username`: The username for the BrowserStack account.\n\t* `password`: The password for the BrowserStack account.\n\t* `proxy` (optional; default: `null`): Proxy server supporting HTTPS to be used for connecting to BrowserStack. e.g. `\"http://proxy.example.com:1234\"`\n\n#### automateClient.getPlan(callback)\n\nGets information about your group's App Automate plan, including the maximum number of parallel sessions allowed and the number of parallel sessions currently running.\n\n* `callback` (`function(error, plan)`): A callback to invoke when the API call is complete.\n\t* `plan`: An object with `parallel_sessions_max_allowed`, `parallel_sessions_running`, and `automate_plan` showing the current state of your plan.\n\n#### automateClient.getProjects(callback)\n\nGets the list of projects.\n\n* `callback` (`function(error, projects)`): A callback to invoke when the API call is complete.\n\t* `projects`: An array of [project objects](#project-objects).\n\n#### automateClient.getProject(id, callback)\n\nGets information about a project.\n\n* `id`: The ID of the project.\n* `callback` (`function(error, project)`): A callback to invoke when the API call is complete.\n\t* `project`: A [project object](#project-objects) including an array of [extended build objects](#build-objects).\n\n#### automateClient.getBuilds([options,] callback)\n\nGets the list of builds.\n\n* `options` (optional): An object containing search parameters.\n\t* `limit`: The number of builds to return. Defaults to `10`.\n\t* `status`: Filter builds based on status. May be one of `\"running\"`, `\"done\"`, `\"failed\"`, `\"timeout\"`.\n* `callback` (`function(error, builds)`): A callback to invoke when the API call is complete.\n\t* `builds`: An array of [build objects](#build-objects).\n\n#### automateClient.getSessions(buildId, [options,] callback)\n\nGets the list of sessions in a build.\n\n* `buildId`: The hashed ID of the build.\n* `options` (optional): An object containing search parameters.\n\t* `limit`: The number of sessions to return. Defaults to `10`.\n\t* `status`: Filter sessions based on status. May be one of `\"running\"`, `\"done\"`, `\"failed\"`.\n* `callback` (`function(error, sessions)`): A callback to invoke when the API call is complete.\n\t* `sessions`: An array of [session objects](#session-objects).\n\n#### automateClient.getSession(id, callback)\n\nGets the details for a session.\n\n* `id`: The hashed ID of the session.\n* `callback` (`function(error, session)`): A callback to invoke when the API call is complete.\n\t* `session`: A [session object](#session-objects).\n\n#### automateClient.updateSession(id, options, callback)\n\nUpdates the status of a session.\n\n* `id`: The hashed ID of the session.\n* `options`: An object containing the parameters.\n\t* `status`: New status value. [May be one of](https://www.browserstack.com/automate/rest-api#rest-api-sessions) `\"completed\"` or `\"error\"`.\n* `callback` (`function(error, session)`): A callback to invoke when the API call is complete.\n\t* `session`: The updated [session object](#session-objects).\n\n#### automateClient.deleteSession(id, callback)\n\nDeletes a session.\n\n* `id`: The hashed ID of the session.\n* `callback` (`function(error, data)`): A callback to invoke when the API call is complete.\n\t* `data`: An object with a `message`, confirming the deletion.\n\n### Screenshots API\n\n#### BrowserStack.createScreenshotClient(settings)\n\nCreates a new client instance.\n\n* `settings`: A hash of settings that apply to all requests for the new client.\n\t* `username`: The username for the BrowserStack account.\n\t* `password`: The password for the BrowserStack account.\n\t* `proxy` (optional; default: `null`): Proxy server supporting HTTPS to be used for connecting to BrowserStack. e.g. `\"http://proxy.example.com:1234\"`\n\n#### screenshotClient.getBrowsers(callback)\n\nGets the list of available browsers.\n\n* `callback` (`function(error, browsers)`): A callback to invoke when the API call is complete.\n\t* `browsers`: An array of [browser objects](#browser-objects).\n\n#### screenshotClient.generateScreenshots(options, callback)\n\nCreates a job to take screenshots.\n\n* `options`: A hash of settings for the screenshots. See [screenshot job objects](#screenshot-job-objects) for details.\n\t* `url`: The URL of the desired page.\n\t* `browsers`: A collection of [browser objects](#browser-objects) indicating which browsers and devices to take screenshots with.\n\t* `win_res` (optional): Only required if taking a screenshot on Windows. Defaults to `\"1024x768\"`.\n\t* `mac_res` (optional): Only required if taking a screenshot on Mac OS X. Defaults to \"1024x768\"`.\n\t* `orientation` (optional): Defaults to `\"portrait\"`.\n\t* `quality` (optional): Defaults to `\"compressed\"`.\n\t* `wait_time` (optional): Defaults to `5`.\n\t* `local` (optional): Defaults to `false`.\n* `callback` (`function(error, job)`): A callback to invoke when the API call is complete.\n\t* `job`: A [screenshot job object](#screenshot-job-objects) containing [screenshot state objects](#screenshot-state-objects) in place of [browser objects](#browser-objects).\n\n#### screenshotClient.getJob(id, callback)\n\nGets details about the current status of a screenshot job.\n\n* `id`: The id of the job.\n* `callback` (`function(error, job)`): A callback to invoke when the API call is complete.\n\t* `job`: A [screenshot job object](#screenshot-job-objects) containing [screenshot state objects](#screenshot-state-objects) in place of [browser objects](#browser-objects).\n\n## Tests\n\nTo run the full test suite, you must have a BrowserStack account. Run `npm test` with the `BROWSERSTACK_USERNAME` and `BROWSERSTACK_KEY` environment variables set.\n\nTo run just the lint checks, run `npm lint`.\n\n## License\n\nCopyright node-browserstack contributors. Released under the terms of the MIT license.\n","time":{"created":"2022-01-26T14:25:39.924Z","modified":"2023-08-09T13:59:11.623Z","1.6.1":"2020-12-12T19:42:08.075Z","1.6.0":"2020-04-08T23:09:51.067Z","1.5.3":"2019-08-10T14:02:46.334Z","1.5.2":"2019-01-10T01:14:44.921Z","1.5.1":"2018-06-10T23:33:24.141Z","1.5.0":"2016-04-21T15:22:14.108Z","1.4.0":"2016-03-10T14:33:52.422Z","1.3.2":"2016-03-03T18:54:36.614Z","1.3.1":"2016-02-03T13:50:34.098Z","1.3.0":"2015-12-03T16:21:35.122Z","1.2.0":"2015-07-16T17:22:51.475Z","1.1.1":"2015-01-28T13:05:31.568Z","1.1.0":"2014-09-17T14:36:41.936Z","1.0.1":"2014-01-06T14:19:43.407Z","1.0.0":"2013-08-16T17:27:24.907Z","0.2.0":"2012-11-15T01:18:50.483Z","0.1.0":"2012-05-09T17:08:14.706Z","0.0.2":"2012-02-23T02:46:56.459Z","0.0.1":"2012-01-26T15:27:39.632Z"},"versions":{"1.6.1":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.6.1","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"contributors":[{"name":"Simon Tarchichi","email":"kartsims@gmail.com"}],"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"license":"MIT","dependencies":{"https-proxy-agent":"^2.2.1"},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0","mocha":"2.4.5","should":"8.2.1"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/* test/*","jscs-fix":"jscs lib/* test/* --fix","jshint":"jshint lib/* test/*","lint":"npm run jscs && npm run jshint","test":"npm run lint && mocha"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"3ea78fb091ab06ff5b985e0b21b6e80029fce66d","_id":"browserstack@1.6.1","_nodeVersion":"14.5.0","_npmVersion":"6.14.5","dist":{"shasum":"e051f9733ec3b507659f395c7a4765a1b1e358b3","size":12035,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.6.1.tgz","integrity":"sha512-GxtFjpIaKdbAyzHfFDKixKO8IBT7wR3NjbzrGc78nNs/Ciys9wU3/nBtsqsWv5nDSrdI5tz0peKuzCPuNXNUiw=="},"_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"directories":{},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/browserstack_1.6.1_1607802127914_0.7686960435595012"},"_hasShrinkwrap":false,"publish_time":1607802128075,"_cnpm_publish_time":1607802128075,"_cnpmcore_publish_time":"2021-12-16T19:22:04.666Z"},"1.6.0":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.6.0","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"contributors":[{"name":"Simon Tarchichi","email":"kartsims@gmail.com"}],"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"license":"MIT","dependencies":{"https-proxy-agent":"^2.2.1"},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0","mocha":"2.4.5","should":"8.2.1"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/* test/*","jscs-fix":"jscs lib/* test/* --fix","jshint":"jshint lib/* test/*","lint":"npm run jscs && npm run jshint","test":"npm run lint && mocha"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"40f9f9c50dc5798b80747eae8cb6b67f244ffc27","_id":"browserstack@1.6.0","_nodeVersion":"12.16.1","_npmVersion":"6.13.4","dist":{"shasum":"5a56ab90987605d9c138d7a8b88128370297f9bf","size":12019,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.6.0.tgz","integrity":"sha512-HJDJ0TSlmkwnt9RZ+v5gFpa1XZTBYTj0ywvLwJ3241J7vMw2jAsGNVhKHtmCOyg+VxeLZyaibO9UL71AsUeDIw=="},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/browserstack_1.6.0_1586387390901_0.36787127962126087"},"_hasShrinkwrap":false,"publish_time":1586387391067,"_cnpm_publish_time":1586387391067,"_cnpmcore_publish_time":"2021-12-16T19:22:04.932Z"},"1.5.3":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.5.3","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"contributors":[{"name":"Simon Tarchichi","email":"kartsims@gmail.com"}],"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"license":"MIT","dependencies":{"https-proxy-agent":"^2.2.1"},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0","mocha":"2.4.5","should":"8.2.1"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/* test/*","jscs-fix":"jscs lib/* test/* --fix","jshint":"jshint lib/* test/*","lint":"npm run jscs && npm run jshint","test":"npm run lint && mocha"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"9b5bc8566263c49b3236e9bbb50553a0785c4ce8","_id":"browserstack@1.5.3","_nodeVersion":"10.15.0","_npmVersion":"6.9.1","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"dist":{"shasum":"93ab48799a12ef99dbd074dd595410ddb196a7ac","size":12141,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.5.3.tgz","integrity":"sha512-AO+mECXsW4QcqC9bxwM29O7qWa7bJT94uBFzeb5brylIQwawuEziwq20dPYbins95GlWzOawgyDNdjYAo32EKg=="},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/browserstack_1.5.3_1565445766175_0.47241822652700516"},"_hasShrinkwrap":false,"publish_time":1565445766334,"_cnpm_publish_time":1565445766334,"_cnpmcore_publish_time":"2021-12-16T19:22:05.176Z"},"1.5.2":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.5.2","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"contributors":[{"name":"Simon Tarchichi","email":"kartsims@gmail.com"}],"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"licence":"MIT","dependencies":{"https-proxy-agent":"^2.2.1"},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0","mocha":"2.4.5","should":"8.2.1"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/* test/*","jscs-fix":"jscs lib/* test/* --fix","jshint":"jshint lib/* test/*","lint":"npm run jscs && npm run jshint","test":"npm run lint && mocha"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"728f13303d799f786c080d7f5759706decb56d95","_id":"browserstack@1.5.2","_npmVersion":"6.4.0","_nodeVersion":"8.8.1","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"dist":{"shasum":"17d8bb76127a1cc0ea416424df80d218f803673f","size":12142,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.5.2.tgz","integrity":"sha512-+6AFt9HzhKykcPF79W6yjEUJcdvZOV0lIXdkORXMJftGrDl0OKWqRF4GHqpDNkxiceDT/uB7Fb/aDwktvXX7dg=="},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/browserstack_1.5.2_1547082884714_0.4510895186031474"},"_hasShrinkwrap":false,"publish_time":1547082884921,"_cnpm_publish_time":1547082884921,"_cnpmcore_publish_time":"2021-12-16T19:22:05.383Z"},"1.5.1":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.5.1","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"contributors":[{"name":"Simon Tarchichi","email":"kartsims@gmail.com"}],"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"licence":"MIT","dependencies":{"https-proxy-agent":"^2.2.1"},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0","mocha":"2.4.5","should":"8.2.1"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/* test/*","jscs-fix":"jscs lib/* test/* --fix","jshint":"jshint lib/* test/*","lint":"npm run jscs && npm run jshint","test":"npm run lint && mocha"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"4353bc516871ec674ecd575e7d5b63ca4703bd6b","_id":"browserstack@1.5.1","_npmVersion":"5.6.0","_nodeVersion":"8.8.1","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"dist":{"shasum":"e2dfa66ffee940ebad0a07f7e00fd4687c455d66","size":12321,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.5.1.tgz","integrity":"sha512-O8VMT64P9NOLhuIoD4YngyxBURefaSdR4QdhG8l6HZ9VxtU7jc3m6jLufFwKA5gaf7fetfB2TnRJnMxyob+heg=="},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/browserstack_1.5.1_1528673603992_0.1350262315989128"},"_hasShrinkwrap":false,"publish_time":1528673604141,"_cnpm_publish_time":1528673604141,"_cnpmcore_publish_time":"2021-12-16T19:22:05.608Z"},"1.5.0":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.5.0","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"contributors":[{"name":"Simon Tarchichi","email":"kartsims@gmail.com"}],"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"licence":"MIT","dependencies":{"https-proxy-agent":"1.0.0"},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0","mocha":"2.4.5","should":"8.2.1"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/* test/*","jscs-fix":"jscs lib/* test/* --fix","jshint":"jshint lib/* test/*","lint":"npm run jscs && npm run jshint","test":"npm run lint && mocha"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"013b3448dbb13d201b302c4bb942092adda62ecb","_id":"browserstack@1.5.0","_shasum":"b565425ad62ed72c1082a1eb979d5313c7d4754f","_from":".","_npmVersion":"3.7.3","_nodeVersion":"5.9.1","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"dist":{"shasum":"b565425ad62ed72c1082a1eb979d5313c7d4754f","size":12342,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.5.0.tgz","integrity":"sha512-KcjnK1CVMsqzz0OIp8s/3p5c2h0bsJmb3/dapCNRqMpLPXevE/v9CnS+yTP07IOvc/kfnLkbbIUIUNNZiJjjdQ=="},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/browserstack-1.5.0.tgz_1461252131558_0.8673105053603649"},"directories":{},"publish_time":1461252134108,"_hasShrinkwrap":false,"_cnpm_publish_time":1461252134108,"_cnpmcore_publish_time":"2021-12-16T19:22:05.929Z"},"1.4.0":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.4.0","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"contributors":[{"name":"Simon Tarchichi","email":"kartsims@gmail.com"}],"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"licence":"MIT","dependencies":{},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/*","jscs-fix":"jscs lib/* --fix","jshint":"jshint lib/*","lint":"npm run jscs && npm run jshint","test":"npm run lint"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"2750f88c989ea1587cdb22f70c147676a9284687","_id":"browserstack@1.4.0","_shasum":"d50b4e466abbfca7a1127aebbb5babfc3ea27ae3","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.3.0","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"dist":{"shasum":"d50b4e466abbfca7a1127aebbb5babfc3ea27ae3","size":8777,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.4.0.tgz","integrity":"sha512-MIRrB+G2iDWNuOs20aOFKgUo6KpMwKSyFf1626YYW7Y54IlQAPcqngd9SE0NkJH+3KocwYrNu9uPMH9BURoKbQ=="},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/browserstack-1.4.0.tgz_1457620430288_0.09488819213584065"},"directories":{},"publish_time":1457620432422,"_hasShrinkwrap":false,"_cnpm_publish_time":1457620432422,"_cnpmcore_publish_time":"2021-12-16T19:22:06.132Z"},"1.3.2":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.3.2","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"licence":"MIT","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/*","jscs-fix":"jscs lib/* --fix","jshint":"jshint lib/*","lint":"npm run jscs && npm run jshint","test":"npm run lint"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"ce650ed3a3092308f4ed161a498d68a4f4ebe33d","_id":"browserstack@1.3.2","_shasum":"6fec7429cee8dd5116eddcde0da0af53a8ff25d4","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.3.0","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"dist":{"shasum":"6fec7429cee8dd5116eddcde0da0af53a8ff25d4","size":7544,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.3.2.tgz","integrity":"sha512-NeppnKfbev0O3WK8YYoSRHctZxVdJpceSIb4r703miUSrn5WTkdxne5TGA5Bp3Q89C2rXiWcu6UoqhBJw5PnmA=="},"_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/browserstack-1.3.2.tgz_1457031273387_0.7776102863717824"},"directories":{},"publish_time":1457031276614,"_hasShrinkwrap":false,"_cnpm_publish_time":1457031276614,"_cnpmcore_publish_time":"2021-12-16T19:22:06.323Z"},"1.3.1":{"name":"browserstack","title":"BrowserStack Client","description":"A client for working with the BrowserStack APIs.","version":"1.3.1","homepage":"https://github.com/scottgonzalez/node-browserstack","author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"licence":"MIT","engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"jscs":"2.8.0","jshint":"2.8.0"},"main":"lib/browserstack.js","scripts":{"jscs":"jscs lib/*","jscs-fix":"jscs lib/* --fix","jshint":"jshint lib/*","lint":"npm run jscs && npm run jshint","test":"npm run lint"},"keywords":["automation","browser","browserstack","screenshot","testing"],"gitHead":"9e9a59bb04df6e3dd80046919ac33691f20579ca","_id":"browserstack@1.3.1","_shasum":"1784baf5e3fde42e4b94aa36e75296d437573dce","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.3.0","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"dist":{"shasum":"1784baf5e3fde42e4b94aa36e75296d437573dce","size":7509,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.3.1.tgz","integrity":"sha512-fa1+jdAs3aDaVu3bg7yVE/T+5TXnOCGoaCNU4CJnP0Pm7OQ2Cs2AQVrAxlFlpicQBzoKkT2F8sC8K/XVEJnbPA=="},"_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/browserstack-1.3.1.tgz_1454507432881_0.8880034820176661"},"directories":{},"publish_time":1454507434098,"_hasShrinkwrap":false,"_cnpm_publish_time":1454507434098,"_cnpmcore_publish_time":"2021-12-16T19:22:06.567Z"},"1.3.0":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"1.3.0","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"grunt":"0.3.x"},"main":"lib/browserstack.js","gitHead":"43aeab20dd09583185a7491ae469aa4f00e0c303","bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"_id":"browserstack@1.3.0","scripts":{},"_shasum":"8438053ef6acbb844dc6b291510c194339eb50df","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"dist":{"shasum":"8438053ef6acbb844dc6b291510c194339eb50df","size":6441,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.3.0.tgz","integrity":"sha512-jBTvd/nLpTZmMnAEF6SDutTjYlcLx+iqmhmo4PBzTvQnts5MazkkT7EUWK39BBAZvvH3m5o2IcFfDoyZq3kFMg=="},"directories":{},"publish_time":1449159695122,"_hasShrinkwrap":false,"_cnpm_publish_time":1449159695122,"_cnpmcore_publish_time":"2021-12-16T19:22:06.806Z"},"1.2.0":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"1.2.0","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"grunt":"0.3.x"},"main":"lib/browserstack.js","gitHead":"1246998566c7d577f01b43dc56710ed1f9a198ed","bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"_id":"browserstack@1.2.0","scripts":{},"_shasum":"22958ff5dc7c78946e667a166fb21e8cbf340866","_from":".","_npmVersion":"2.9.1","_nodeVersion":"0.12.3","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"dist":{"shasum":"22958ff5dc7c78946e667a166fb21e8cbf340866","size":5281,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.2.0.tgz","integrity":"sha512-6BKBnRvG+U1ojZcHc0AS8Xhqy68FHdI9zhlgf+/0T/5WnQhN2Lkq4dRi5i0jGHY5eG6wlpB5AwOKrrre7xumLA=="},"directories":{},"publish_time":1437067371475,"_hasShrinkwrap":false,"_cnpm_publish_time":1437067371475,"_cnpmcore_publish_time":"2021-12-16T19:22:07.030Z"},"1.1.1":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"1.1.1","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"grunt":"0.3.x"},"main":"lib/browserstack.js","gitHead":"ddda1d48bb4c38185e003a290e1449def2f6df0c","bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"_id":"browserstack@1.1.1","scripts":{},"_shasum":"c6b2d1a284f0f6fd9e0c48239a1d9d12646c0281","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"dist":{"shasum":"c6b2d1a284f0f6fd9e0c48239a1d9d12646c0281","size":5586,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.1.1.tgz","integrity":"sha512-Wl9XwEhJpmpVrdCI5dzY4PiTm4i3yyJ4yoiibj1lfO9bDWIo7IQeIrMBUgCMyecPahGMLLh98cWNq8B/gbAFYw=="},"directories":{},"publish_time":1422450331568,"_hasShrinkwrap":false,"_cnpm_publish_time":1422450331568,"_cnpmcore_publish_time":"2021-12-16T19:22:07.247Z"},"1.1.0":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"1.1.0","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"grunt":"0.3.x"},"main":"lib/browserstack.js","gitHead":"3c4be49f3221b33bb0abe399454fdf6ad47245f6","bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"_id":"browserstack@1.1.0","scripts":{},"_shasum":"e072a254512e22edcfe419f3b060e695200ad695","_from":".","_npmVersion":"2.0.0-beta.0","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"dist":{"shasum":"e072a254512e22edcfe419f3b060e695200ad695","size":5350,"noattachment":false,"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.1.0.tgz","integrity":"sha512-82QHF5bVp+c4Hw3MjMTnYMFxnWMnN6Dyl4yBJaXu5CoMAb/Rxy1JktbpN8orOuC2mQTSdeBRVUosZgqYHkySAQ=="},"directories":{},"publish_time":1410964601936,"_hasShrinkwrap":false,"_cnpm_publish_time":1410964601936,"_cnpmcore_publish_time":"2021-12-16T19:22:07.625Z"},"1.0.1":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"1.0.1","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"grunt":"0.3.x"},"main":"lib/browserstack.js","readmeFilename":"readme.md","bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"_id":"browserstack@1.0.1","dist":{"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.0.1.tgz","shasum":"41cb44376a43e991ad4635a038ba2a16c13d701f","size":5185,"noattachment":false,"integrity":"sha512-b5e6dFwzYpoqL6kPg+yzSqcRlv0jtnFx3JXBj2OCFXobxGGwp5VI6Yvb0qu+jztMlQEOTz1PpyB30P6rj6DgAg=="},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"publish_time":1389017983407,"_hasShrinkwrap":false,"_cnpm_publish_time":1389017983407,"_cnpmcore_publish_time":"2021-12-16T19:22:07.854Z"},"1.0.0":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"1.0.0","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"grunt":"0.3.x"},"main":"lib/browserstack.js","readmeFilename":"readme.md","_id":"browserstack@1.0.0","dist":{"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-1.0.0.tgz","shasum":"a58320f490790b49e26386e1863ac9119442fb61","size":5239,"noattachment":false,"integrity":"sha512-9Xen0wburSQt1Xadzu+PE+EwGcMmouPSPpzrlN8Y5eAkwhWpPktv+4pxJ6gLZEAoYN0acXuJ4PYO/niTzK1yng=="},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"publish_time":1376674044907,"_hasShrinkwrap":false,"_cnpm_publish_time":1376674044907,"_cnpmcore_publish_time":"2021-12-16T19:22:08.092Z"},"0.2.0":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"0.2.0","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"grunt":"0.3.x"},"main":"lib/browserstack.js","readmeFilename":"readme.md","_id":"browserstack@0.2.0","dist":{"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-0.2.0.tgz","shasum":"dfe34388d7f2a987ac4c540b5466e9145a12ead1","size":4506,"noattachment":false,"integrity":"sha512-rKGxoi9kpF0YFuWHvChB0dRiNJhTaOBmyYX0AMmIvkwEgq79L4FabHO57DHcPpg0XZzxVn27P20Ru1B1E+VyJw=="},"_npmVersion":"1.1.65","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"publish_time":1352942330483,"_hasShrinkwrap":false,"_cnpm_publish_time":1352942330483,"_cnpmcore_publish_time":"2021-12-16T19:22:08.280Z"},"0.1.0":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"0.1.0","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{"grunt":"0.3.x"},"main":"lib/browserstack.js","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"_id":"browserstack@0.1.0","optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-0.1.0.tgz","shasum":"5cf9d95ce7d116190bb713651cb5ef65fae4c766","size":5326,"noattachment":false,"integrity":"sha512-2ucyE8W6lq1/jh1T0xJ4P/waEbHOf0TEZT4ZSiQcgJn5E+VMro1gC/9xWoXeo/xo/DaWyPy3YRLwxJH6NOKlLw=="},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"publish_time":1336583294706,"_hasShrinkwrap":false,"_cnpm_publish_time":1336583294706,"_cnpmcore_publish_time":"2021-12-16T19:22:08.518Z"},"0.0.2":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"0.0.2","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"main":"lib/browserstack.js","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"_id":"browserstack@0.0.2","_engineSupported":true,"_npmVersion":"1.1.0-alpha-6","_nodeVersion":"v0.6.4","_defaultsLoaded":true,"dist":{"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-0.0.2.tgz","shasum":"00bf49539019e743c8e3ea719f3c9b2f2d079484","size":4520,"noattachment":false,"integrity":"sha512-glB0F1aw1+O+9Wr5UFuibSEOKLXAJ7hgH+kNCj9svBHARE5t5jet/oenUpH/G0hZzwavmaC1gr6TaVh1XEalOA=="},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"publish_time":1329965216459,"_hasShrinkwrap":false,"_cnpm_publish_time":1329965216459,"_cnpmcore_publish_time":"2021-12-16T19:22:08.730Z"},"0.0.1":{"author":{"name":"Scott Gonz√°lez","email":"scott.gonzalez@gmail.com","url":"http://scottgonzalez.com"},"name":"browserstack","description":"A client for working with the BrowserStack API.","version":"0.0.1","homepage":"https://github.com/scottgonzalez/node-browserstack","repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"engines":{"node":">=0.4.0"},"dependencies":{},"devDependencies":{},"main":"browserstack.js","_npmUser":{"name":"scott.gonzalez","email":"scott.gonzalez@gmail.com"},"_id":"browserstack@0.0.1","_engineSupported":true,"_npmVersion":"1.1.0-alpha-6","_nodeVersion":"v0.6.4","_defaultsLoaded":true,"dist":{"tarball":"https://registry.npmmirror.com/browserstack/-/browserstack-0.0.1.tgz","shasum":"8f7c7bf6a3f3283ad3017099490e17a38f3b6157","size":3161,"noattachment":false,"integrity":"sha512-LNbP1B2JaQgV3jNChynTXh1Ot0c7h71aN2XtX/GhzLi0E6kipJApeh7ur9ZYDV8FcJ0jDXzb//epIWcNI3xNbA=="},"maintainers":[{"name":"b1zzu","email":"david3bizzarri@gmail.com"},{"name":"kartsims","email":"kartsims@gmail.com"}],"directories":{},"publish_time":1327591659632,"_hasShrinkwrap":false,"_cnpm_publish_time":1327591659632,"_cnpmcore_publish_time":"2021-12-16T19:22:08.968Z"}},"bugs":{"url":"https://github.com/scottgonzalez/node-browserstack/issues"},"contributors":[{"name":"Simon Tarchichi","email":"kartsims@gmail.com"}],"homepage":"https://github.com/scottgonzalez/node-browserstack","keywords":["automation","browser","browserstack","screenshot","testing"],"repository":{"type":"git","url":"git://github.com/scottgonzalez/node-browserstack.git"},"_source_registry_name":"default"}