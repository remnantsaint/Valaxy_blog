{"_id":"@mixmark-io/domino","_rev":"4003183-6611bf3b0f785d820891b6cb","dist-tags":{"latest":"2.2.0"},"name":"@mixmark-io/domino","time":{"created":"2024-04-06T21:31:39.562Z","modified":"2024-04-08T13:11:54.211Z","2.2.0":"2024-04-06T21:31:29.908Z"},"versions":{"2.2.0":{"name":"@mixmark-io/domino","version":"2.2.0","license":"BSD-2-Clause","author":"Felix Gnass <fgnass@gmail.com>","description":"Server-side DOM implementation based on Mozilla's dom.js","main":"./lib","repository":{"type":"git","url":"https://github.com/mixmark-io/domino.git"},"scripts":{"test":"mocha"},"types":"lib/index.d.ts","devDependencies":{"jquery":"^3.5.1","mocha":"^6.2.3","puppeteer":"^21.3.5","should":"^13.2.3"},"_id":"@mixmark-io/domino@2.2.0","gitHead":"d476492c1133e9609613e96b969d193f2cfd0c51","dist":{"shasum":"4e8ec69bf1afeb7a14f0628b7e2c0f35bdb336c3","integrity":"sha512-Y28PR25bHXUg88kCV7nivXrP2Nj2RueZ3/l/jdx6J9f8J4nsEGcgX0Qe6lt7Pa+J79+kPiJU3LguR6O/6zrLOw==","tarball":"https://registry.npmmirror.com/@mixmark-io/domino/-/domino-2.2.0.tgz","fileCount":1023,"unpackedSize":7736745,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIGRdeYS7OI11GP4BwI3G/U0hHF0fWgnHJ/MXsxfCtCqgAiAeqUzVJXM/B0K/M5bOWxxF8Il5XdHJgeLIUqiP+XvP1w=="}],"size":879011},"_npmUser":{"name":"pavel.horal","email":"pavel.horal@orchitech.cz"},"directories":{},"maintainers":[{"name":"pavel.horal","email":"pavel.horal@orchitech.cz"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/domino_2.2.0_1712439089662_0.27393669421521705"},"_hasShrinkwrap":false,"_cnpmcore_publish_time":"2024-04-06T21:31:29.908Z","publish_time":1712439089908,"_source_registry_name":"default"}},"author":"Felix Gnass <fgnass@gmail.com>","description":"Server-side DOM implementation based on Mozilla's dom.js","license":"BSD-2-Clause","maintainers":[{"name":"martincizek","email":"martin.cizek@orchitech.cz"},{"name":"pavel.horal","email":"pavel.horal@orchitech.cz"}],"readme":"This repository is only intended to be used as a reference implementation of Turndown's reference HTML parser.\r\nIt is not intended to be used as a general-purpose DOM implementation. No contributions other than bugfixes to\r\nsupported Turndown use case will be accepted.\r\n\r\n\r\n# Server-side DOM implementation based on Mozilla's dom.js\r\n\r\nThis is a fork of [Angular Domino](https://github.com/angular/domino), which is fork of the original [Domino](https://github.com/fgnass/domino).\r\n\r\nAs the name might suggest, domino's goal is to provide a <b>DOM in No</b>de.\r\n\r\nIn contrast to the original [dom.js](https://github.com/andreasgal/dom.js) project, domino was not designed to run untrusted code. Hence it doesn't have to hide its internals behind a proxy facade which makes the code not only simpler, but also [more performant](https://github.com/fgnass/dombench).\r\n\r\nDomino currently doesn't use any harmony/ES6 features like proxies or WeakMaps and therefore also runs in older Node versions.\r\n\r\n## Speed over Compliance\r\n\r\nDomino is intended for _building_ pages rather than scraping them. Hence Domino doesn't execute scripts nor does it download external resources.\r\n\r\nAlso Domino doesn't generally implement properties which have been deprecated in HTML5.\r\n\r\nDomino sticks to [DOM level 4](http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#interface-attr), which means that Attributes do not inherit the Node interface.\r\n\r\n<b>Note that</b> because domino does not use proxies,\r\n`Element.attributes` is not a true JavaScript array; it is an object\r\nwith a `length` property and an `item(n)` accessor method.  See\r\n[github issue #27](https://github.com/fgnass/domino/issues/27) for\r\nfurther discussion.  It does however implement direct indexed accessors\r\n(`element.attributes[i]`) and is live.\r\n\r\n\r\n\r\n## CSS Selector Support\r\n\r\nDomino provides support for `querySelector()`, `querySelectorAll()`, and `matches()` backed by the [Zest](https://github.com/chjj/zest) selector engine.\r\n\r\n## Optimization\r\n\r\nDomino represents the DOM tree structure in the same way Webkit and\r\nother browser-based implementations do: as a linked list of children\r\nwhich is converted to an array-based representation iff the\r\n`Node#childNodes` accessor is used.  You will get the best performance\r\nfrom tree modification code (inserting and removing children) if you\r\navoid the use of `Node#childNodes` and traverse the tree using\r\n`Node#firstChild`/`Node#nextSibling` (or\r\n`Node#lastChild`/`Node#previousSibling`) or `querySelector()`/etc.\r\n\r\n## Usage\r\n\r\nDomino supports the DOM level 4 API, and thus API documentation can be\r\nfound on standard reference sites.  For example, you could start from\r\nMDN's documentation for\r\n[Document](https://developer.mozilla.org/en-US/docs/Web/API/Document) and\r\n[Node](https://developer.mozilla.org/en-US/docs/Web/API/Node).\r\n\r\nThe only exception is the initial creation of a document:\r\n```javascript\r\nvar domino = require('domino');\r\nvar Element = domino.impl.Element; // etc\r\n\r\n// alternatively: document = domino.createDocument(htmlString, true)\r\n\r\nvar h1 = document.querySelector('h1');\r\nconsole.log(h1.innerHTML);\r\nconsole.log(h1 instanceof Element);\r\n```\r\n\r\nThere is also an incremental parser available, if you need to interleave\r\nparsing with other processing:\r\n```javascript\r\nvar domino = require('domino');\r\n\r\nvar pauseAfter = function(ms) {\r\n  var start = Date.now();\r\n  return function() { return (Date.now() - start) >= ms; };\r\n};\r\n\r\nvar incrParser = domino.createIncrementalHTMLParser();\r\nincrParser.write('<p>hello<');\r\nincrParser.write('b>&am');\r\nincrParser.process(pauseAfter(1/*ms*/)); // can interleave processing\r\nincrParser.write('p;');\r\n// ...etc...\r\nincrParser.end(); // when done writing the document\r\n\r\nwhile (incrParser.process(pauseAfter(10/*ms*/))) {\r\n  // ...do other housekeeping...\r\n}\r\n\r\nconsole.log(incrParser.document().outerHTML);\r\n```\r\n\r\nIf you want a more standards-compliant way to create a `Document`, you can\r\nalso use [DOMImplementation](https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation):\r\n```javascript\r\nvar domino = require('domino');\r\nvar domimpl = domino.createDOMImplementation();\r\nvar doc = domimpl.createHTMLDocument();\r\n```\r\n\r\nBy default many domino methods will be stored in writable properties, to\r\nallow polyfills (as browsers do).  You can lock down the implementation\r\nif desired as follows:\r\n```javascript\r\nglobal.__domino_frozen__ = true; // Must precede any `require('domino')`\r\nvar domino = require('domino');\r\n```\r\n\r\n## Tests\r\n\r\nDomino includes test from the [W3C DOM Conformance Suites](http://www.w3.org/DOM/Test/)\r\nas well as tests from [HTML Working Group](http://www.w3.org/html/wg/wiki/Testing).\r\n\r\nWhen you checkout this repository for the first time, run the following command to also check out code for the mentioned tests:\r\n\r\n```\r\ngit submodule update --init --recursive\r\n```\r\n\r\nThe tests can be run via `npm test` or directly though the [Mocha](http://mochajs.org/) command line:\r\n\r\n![Screenshot](http://fgnass.github.com/images/domino.png)\r\n\r\n## License and Credits\r\n\r\nThe majority of the code was originally written by [Andreas Gal](https://github.com/andreasgal/) and [David Flanagan](https://github.com/davidflanagan) as part of the [dom.js](https://github.com/andreasgal/dom.js) project. Please refer to the included LICENSE file for the original copyright notice and disclaimer.\r\n\r\n[Felix Gnass](https://github.com/fgnass/) extracted the code and turned\r\nit into a stand-alone npm package.\r\n\r\nThe code has been maintained since 2013 by [C. Scott Ananian](https://github.com/cscott/) on behalf of the Wikimedia Foundation, which uses it in its\r\n[Parsoid](https://www.mediawiki.org/wiki/Parsoid) project.  A large number\r\nof improvements have been made, mostly focusing on correctness,\r\nperformance, and (to a lesser extent) completeness of the implementation.\r\n\r\n[1]: https://travis-ci.org/fgnass/domino.svg\r\n[2]: https://travis-ci.org/fgnass/domino\r\n[3]: https://david-dm.org/fgnass/domino.svg\r\n[4]: https://david-dm.org/fgnass/domino\r\n[5]: https://david-dm.org/fgnass/domino/dev-status.svg\r\n[6]: https://david-dm.org/fgnass/domino#info=devDependencies\r\n","repository":{"type":"git","url":"https://github.com/mixmark-io/domino.git"},"_source_registry_name":"default"}