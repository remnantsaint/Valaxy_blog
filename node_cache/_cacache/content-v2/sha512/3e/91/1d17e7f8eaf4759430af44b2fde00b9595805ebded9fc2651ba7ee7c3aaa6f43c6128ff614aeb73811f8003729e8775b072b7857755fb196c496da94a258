{"_attachments":{},"_id":"reamde","_rev":"512834-61f2331452eaed99a487bf48","author":{"name":"Alex Indigo","email":"iam@alexindigo.com"},"description":"Strips javascript code blocks out of README (or any other markdown) files and converts them into function objects.","dist-tags":{"latest":"1.1.0"},"license":"MIT","maintainers":[{"name":"alexindigo","email":"iam@alexindigo.com"}],"name":"reamde","readme":"# Reamde [![Build Status](https://travis-ci.org/alexindigo/node-reamde.svg?branch=master)](https://travis-ci.org/alexindigo/node-reamde) [![Dependency Status](https://david-dm.org/alexindigo/node-reamde.svg?style=flat)](https://david-dm.org/alexindigo/node-reamde)\n\nStrips javascript code blocks out of README (or any other markdown) files and converts them into function objects.\n\n## Examples\n\n### Basic\n\n```javascript\nvar fs       = require('fs')\n  , reamde   = require('reamde')\n  , examples = reamde(fs.readFileSync('./README.md', 'utf-8'))\n  ;\n\nconsole.log(examples);\n// -> outputs list of function objects\n\n```\n\nFile `README.md` contains following:\n\n    ### Basic:\n\n    ```javascript\n    var fs       = require('fs')\n      , reamde   = require('reamde')\n      , examples = reamde(fs.readFileSync('./README.md', 'utf-8'))\n      ;\n\n    console.log(examples);\n    // -> outputs list of function objects\n\n    ```\n\n\n### Non-Runnable Example\n\n```\n$ echo \"This code block won't be converted into a function\"\nThis code block won't be converted into a function\n$\n```\n\nFile `README.md` contains following:\n\n    ### Not runnable example:\n\n    ```\n    $ echo \"This code block won't be converted into a function\"\n    This code block won't be converted into a function\n    $\n    ```\n\n### Replacements\n\nReamde accepts list of pattern-replacement pairs that will be converted into global RegExps and run against function body. Replacement could be string or object, in the latter case randomly generated id will be used as replacement within function body and the object will be passed as function call argument.\n\n```javascript\nvar fs      = require('fs')\n  , reamde  = require('reamde')\n  , content = fs.readFileSync('./README.md', 'utf-8')\n  , examples\n  ;\n\nexamples = reamde(content, {replace:\n{\n  'require(\\'reamde\\')' : reamde,\n  'console.log('        : 'callback('\n}});\n\nconsole.log(examples);\n// -> outputs list of function objects\n\n```\n\n### Runtime Arguments\n\nAlso Reamde accepts array of runtime-populated arguments, which will be listed after replacement referenced arguments.\n\n```javascript\nvar fs      = require('fs')\n  , reamde  = require('reamde')\n  , content = fs.readFileSync('./README.md', 'utf-8')\n  , examples\n  ;\n\nfunction customLog(data)\n{\n  console.log({'data': data});\n}\n\nexamples = reamde(content, {runtime: ['console'], replace: {'\\'reamde\\'': '\\'./\\''}});\n\n// run first example with custom object,\n// to get assert call instead of console.log\nexamples[0]({log: customLog});\n\n```\n\n### Require Mapping\n\nAllows to substitute required modules from example with custom functions. Each mapping member should be a function that returns required module or its substitute. Optionally accepts `require` function as first argument, in case you have provided custom require for the examples.\n\n```javascript\nvar fs      = require('fs')\n  , reamde  = require('reamde')\n  , content = fs.readFileSync('./README.md', 'utf-8')\n  , examples\n  , options\n  ;\n\n// prepare option\noptions =\n{\n  mapping: {'reamde': function(require) { return require('./'); }}\n};\n\nexamples = reamde(content, options);\n\nconsole.log(examples);\n\n```\n\n## TODO\n\n- Don't strip 4+ spaces indentation with runnable examples.\n\n## License\n\nLicensed under the MIT license.\n","time":{"created":"2022-01-27T05:52:20.120Z","modified":"2022-01-27T05:52:20.120Z","0.0.0":"2014-12-22T07:00:44.879Z","1.0.0":"2014-12-25T10:09:41.001Z","1.1.0":"2014-12-29T00:57:29.968Z"},"versions":{"0.0.0":{"name":"reamde","version":"0.0.0","description":"Strips javascript code blocks out of README (or any other markdown) files and converts them into function objects.","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"https://alexindigo@github.com/alexindigo/node-reamde.git"},"keywords":["readme","javascript","function","convert","test","example","parse","strip","code"],"author":{"name":"Alex Indigo","email":"iam@alexindigo.com"},"license":"MIT","bugs":{"url":"https://github.com/alexindigo/node-reamde/issues"},"homepage":"https://github.com/alexindigo/node-reamde","gitHead":"f57725faa1485514663e7073deb3638662d40d80","_id":"reamde@0.0.0","_shasum":"91f790ac43e57bd3a1d03cdf9e7cbfc42102ffc6","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"alexindigo","email":"iam@alexindigo.com"},"maintainers":[{"name":"alexindigo","email":"iam@alexindigo.com"}],"dist":{"shasum":"91f790ac43e57bd3a1d03cdf9e7cbfc42102ffc6","tarball":"https://registry.npmmirror.com/reamde/-/reamde-0.0.0.tgz","size":1267,"integrity":"sha512-F6yR/+O/8ZAJ+NNrhi9hJgRAI0lTCfo0d//Moktb27EjZDKvau2TTpvn+3I9W2sYykwuu0t/28VwgrOSOrzK/A=="},"directories":{},"_cnpmcore_publish_time":"2021-12-23T17:31:28.345Z"},"1.0.0":{"name":"reamde","version":"1.0.0","description":"Strips javascript code blocks out of README (or any other markdown) files and converts them into function objects.","main":"index.js","scripts":{"test":"node test.js"},"repository":{"type":"git","url":"https://alexindigo@github.com/alexindigo/node-reamde.git"},"keywords":["readme","javascript","function","convert","test","example","parse","strip","code"],"author":{"name":"Alex Indigo","email":"iam@alexindigo.com"},"license":"MIT","bugs":{"url":"https://github.com/alexindigo/node-reamde/issues"},"homepage":"https://github.com/alexindigo/node-reamde","gitHead":"743a02afa9fe4139c8ac8f11a44904a0272a5cb2","_id":"reamde@1.0.0","_shasum":"7ede2d3bc6de4b1236c3f943fb2e6edf9a1104c8","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"alexindigo","email":"iam@alexindigo.com"},"maintainers":[{"name":"alexindigo","email":"iam@alexindigo.com"}],"dist":{"shasum":"7ede2d3bc6de4b1236c3f943fb2e6edf9a1104c8","tarball":"https://registry.npmmirror.com/reamde/-/reamde-1.0.0.tgz","size":3728,"integrity":"sha512-7ZykLYrRlK38zQdpQvBXO0JZAp6/wHT5ONlzhUt4SfB6okVRoT3kfDrFJ+RFA/T2LIWTSWJS+zx3lNunzfwOgw=="},"directories":{},"_cnpmcore_publish_time":"2021-12-23T17:31:29.194Z"},"1.1.0":{"name":"reamde","version":"1.1.0","description":"Strips javascript code blocks out of README (or any other markdown) files and converts them into function objects.","main":"index.js","scripts":{"test":"node test.js"},"repository":{"type":"git","url":"https://alexindigo@github.com/alexindigo/node-reamde.git"},"keywords":["readme","javascript","function","convert","test","example","parse","strip","code"],"author":{"name":"Alex Indigo","email":"iam@alexindigo.com"},"license":"MIT","bugs":{"url":"https://github.com/alexindigo/node-reamde/issues"},"homepage":"https://github.com/alexindigo/node-reamde","gitHead":"e154ecd1df09f2f413baeceaf8b912a018c2a0bd","_id":"reamde@1.1.0","_shasum":"bb91dc5954f88a1df2f5cbbf6791ab5b1c0b01d0","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"alexindigo","email":"iam@alexindigo.com"},"maintainers":[{"name":"alexindigo","email":"iam@alexindigo.com"}],"dist":{"shasum":"bb91dc5954f88a1df2f5cbbf6791ab5b1c0b01d0","tarball":"https://registry.npmmirror.com/reamde/-/reamde-1.1.0.tgz","size":4142,"integrity":"sha512-TGB5CSIIdSyFr/wjll9Pvh5ILuWSUr7mzcWT/6VbzTtdYqFC6BXi7BES18YnHnRlg0NKks6b+c2GDvj2azXJ/Q=="},"directories":{},"_cnpmcore_publish_time":"2021-12-23T17:31:30.060Z"}},"_source_registry_name":"default"}